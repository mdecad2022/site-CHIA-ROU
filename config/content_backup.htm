<h1>About</h1>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<p>四設計二甲 41023104 呂佳柔</p>
<p>電腦輔助機械設計課程CAD2022</p>
<p>倉儲 <a href="https://github.com/mdecad2022/site-CHIA-ROU.git">https://github.com/mdecad2022/site-CHIA-ROU.git</a></p>
<p>課程網誌 <a href="https://mde.tw/blog/category/cad2022.html">https://mde.tw/blog/category/cad2022.html</a> </p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<h1>Schedule</h1>
<p><strong>W1</strong></p>
<p>中秋節放假</p>
<p><strong>W2</strong></p>
<p>學校網路設定, 取得個人mdecad2022網站倉儲, 建立網頁, 登記github帳號, 申請OneDrive、Replit、Onshape, 取得mdecycu的mdecad2022倉儲, 建立靜態網頁, 利用split建立動態網頁, 修改標題, 雲端推送。</p>
<p><strong>W3</strong></p>
<p>用email2000(學號@nfu.edu.tw)申請OneDrive雲端, 加入Teams團隊(驗證碼dyw3r9h), 申請TCexam(僅代理主機https://exam.cycu.org)-學號/nfu信箱/密碼/名/姓/四設二甲。</p>
<p><strong>W4</strong></p>
<p>Teams下載檔案, portable設Putty, ssh, 利用小黑窗建立網頁, 用TCexam測驗。</p>
<p><strong>W8</strong></p>
<p><span>期中考</span></p>
<p><strong>W9</strong></p>
<p><span>期中考</span></p>
<p><strong>W11</strong></p>
<p>運動會</p>
<p><strong>W12</strong></p>
<p>上傳考試題目</p><h2>心得</h2>
<p>2022 Fall電腦輔助設計與實習到底在教什麼?</p>
<p>課程包含電腦、輔助及設計三個要素，電腦(Computer)有軟體、硬體與介於軟、硬體之間的韌體(Firmware)；輔助(Aided)為從旁協助；設計(Design)指因應使用者需求，依據設計者的安排及流程，逐一從虛擬邁向實體，模擬走向實現。</p>
<p><span>2022 Fall電腦輔助設計與實習的課程在訓練及培養"需要了解電腦輔助設計套件原理、架構與邏輯"的操作、開發者。</span></p>
<p>*韌體(Firmware)：電腦、軟體、網路環境的發展變得越來越複雜且精細，因此改由韌體程式處理硬體元件及環境辨識與啟動等相關設定，功能更強且能自動執行。</p><h2>internet</h2>
<p>*乙太網路</p>
<p>變更介面卡選項/乙太網路/IPv4關閉/IPv6開啟/DNS伺服器位址2001:b000:168::1</p>
<p>*Firefox</p>
<p>手動設定Proxy/學校電腦2001:288:6004:17::42/個人筆電140.130.17.4/連接埠3128</p>
<p>*Proxy伺服器</p>
<p>2001:288:6004:17::42<span>/連接埠3128</span></p><h2>github</h2>
<p>取得site_Github_帳號倉儲管理權限</p>
<p><span>登入Github帳號/網址輸入https://wcms.repl.co /進入2022 Fall</span></p>
<p></p><h1>HW</h1>
<h2>W8</h2>
<p>下載NX2027 lite可攜版本、Solvespace 3.1版、drill press零組件檔案</p>
<p>在Onshape建立教育版帳號</p>
<p><img alt="" height="520" src="/images/w8.jpg" width="1013"/></p>
<p></p>
<h2>w10</h2>
<h2>w12</h2>
<div>各組依照相同格式, module name 選用 cad2022, 而 subject 則依照各組組序與命題週次命名, 例如: 2ag1-w6 表示由 2a 第一組針對 w6 的上課內容命題, 每一組題目至少 5 題, 至多 10 題, 每一題必須至少有 5 個正確敘述, 5 個錯誤敘述.</div>
<p>考試題目<a href="/downloads/tcexam_network_setting_cadlab.leo">2ag1.leo</a>，<a href="/downloads/tcexam_network_setting_cadlab.xml">2ag1.xml</a></p>
<h2>w13</h2>
<div><strong>Solvespace 編譯繪圖與應用</strong></div>
<ol>
<li>
<div>Solvespace 參數繪圖套件編譯過程, 請參考 <a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/EVX-rq3-f0tKuYx0ePMQJJIBTHWSX9wj1Z-TxOBQ1lNoPQ?e=BkC7Ll" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/evx-rq3-f0tkuyx0epmqjjibthwsx9wj1z-txobq1lnopq?e=bkc7ll">1</a>, <a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/ETqam8dmpy1HtfZ42zaZdGcBvf_Qh4rf-w4GMIKaC9xTxg?e=EqeVh1" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/etqam8dmpy1htfz42zazdgcbvf_qh4rf-w4gmikac9xtxg?e=eqevh1">2</a>, <a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/EdPJQYggTNdPr-0G0lercGIBkjgBypWIKRhikZClmx10Cw?e=mEPDLO" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/edpjqyggtndpr-0g0lercgibkjgbypwikrhikzclmx10cw?e=mepdlo">3</a> 教學影片說明.</div>
</li>
<li>
<div>單軸旋轉零組件繪製與應用, 請參考<a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/EXx8lZRnlqNFpx01vRqZkVIBfwbWrqmwgalHIBgtrWyLHw?e=I9Ds2H" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/exx8lzrnlqnfpx01vrqzkvibfwbwrqmwgalhibgtrwylhw?e=i9ds2h">教學影片</a>說明.</div>
</li>
<li>將上述編譯與應用流程實習內容, 放到個人 HW (h1) 中的 w13 (h2) 頁面.</li>
<li>零組件繪圖之後再利用 NX2027 與 Onshape 進行繪製與轉檔</li>
</ol>
<script>
var winkVideoData_40923151 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/W13.mp4" type="video/mp4"/></video></div>
<h2>w14</h2>
<div>NX2027 Onshape Solvespace 零組件繪圖考試</div>
<h3>Solvespace</h3>
<div>
<div>Solvespace 零組件繪圖考試</div>
<div>
<div>根據 <a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/EXx8lZRnlqNFpx01vRqZkVIBfwbWrqmwgalHIBgtrWyLHw?e=I9Ds2H" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/exx8lzrnlqnfpx01vrqzkvibfwbwrqmwgalhibgtrwylhw?e=i9ds2h">w13 one link robot 零組件繪圖與模擬教學影片</a>, 以 Solvespace 3.1 完成與影片相同連桿與旋轉軸尺寸之 two link robot 零組件繪製後, 壓縮為 .7z 檔案 upload 到個人的 <a href="https://stud.cycu.org" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://stud.cycu.org/">https://stud.cycu.org</a>:8xxxx 網站後, 將繪圖過程以 Wink 製作 mp4 影片後, 加上各階段繪圖說明 tag 後, 嵌入個人的 stud 動態網頁與個人課程 Github Pages 靜態網頁 (HW (H1) 下的 w14 (H2) 下的 Solvespace (H3) 頁面後, 可以得到 Solvespace 零組件繪圖考試分數.</div>
<div><a href="/downloads/w14solvespace.zip">檔案下載</a></div>
<div></div>
</div>
<script>
var winkVideoData_40923151 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/W13.mp4" type="video/mp4"/></video></div>
</div>
<h3>NX</h3>
<div>
<div><strong>NX2027 零組件繪圖考試</strong></div>
<div data-tid="messageBodyContainer">
<div data-tid="messageBodyContent">
<div>依據<a href="https://nfuedu.sharepoint.com/:v:/s/cad2022/EXx8lZRnlqNFpx01vRqZkVIBfwbWrqmwgalHIBgtrWyLHw?e=I9Ds2H" title="https://nfuedu.sharepoint.com/:v:/s/cad2022/exx8lzrnlqnfpx01vrqzkvibfwbwrqmwgalhibgtrwylhw?e=i9ds2h">教學影片</a>中的零組件尺寸與組立條件, 使用 NX2027 繪製 one link robot 零組件後, , 壓縮為 .7z 檔案 upload 到個人的 <a href="https://stud.cycu.org" title="https://stud.cycu.org/">https://stud.cycu.org</a>:8xxxx 網站後, 將繪圖過程以 Wink 製作 mp4 影片後, 加上各階段繪圖說明 tag 後, 嵌入個人的 stud 動態網頁與個人課程 Github Pages 靜態網頁 (HW (H1) 下的 w14 (H2) 下的 NX (H3) 頁面後, 可以得到 NX 零組件繪圖考試分數.</div>
<div>NX檔案</div>
<div></div>
<div><strong>1. </strong>零件繪製</div>
<script>
var winkVideoData_40923151 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/W14-NX.mp4" type="video/mp4"/></video><strong>2. </strong>零件組合</div>
</div>
<script>
var winkVideoData_40923152 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923152" height="630" muted="true" width="1008">
<source src="/downloads/W14-NX-2.mp4" type="video/mp4"/></video></div>
</div>
</div>