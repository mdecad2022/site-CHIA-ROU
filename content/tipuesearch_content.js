var tipuesearch = {"pages": [{'title': 'About', 'text': '四設計二甲 41023104 呂佳柔 \n 電腦輔助機械設計課程CAD2022 \n 網頁\xa0 https://mdecad2022.github.io/site-CHIA-ROU/content/index.html \xa0 \n 倉儲  https://github.com/mdecad2022/site-CHIA-ROU.git \n 課程網誌\xa0 https://mde.tw/blog/category/cad2022.html \xa0 \n \n cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Schedule', 'text': 'W1 \n 中秋節放假 \n W2 \n 學校網路設定, 取得個人mdecad2022網站倉儲, 建立網頁, 登記github帳號, 申請OneDrive、Replit、Onshape, 取得mdecycu的mdecad2022倉儲, 建立靜態網頁, 利用split建立動態網頁, 修改標題, 雲端推送。 \n W3 \n 用email2000(學號@nfu.edu.tw)申請OneDrive雲端, 加入Teams團隊(驗證碼dyw3r9h), 申請TCexam(僅代理主機https://exam.cycu.org)-學號/nfu信箱/密碼/名/姓/四設二甲。 \n W4 \n Teams下載檔案, portable設Putty, ssh, 利用小黑窗建立網頁, 用TCexam測驗。 \n W5 \n 透過stud.cycu.org執行動態網站 \n W6 \n NX2027與Onshape零組件繪圖練習,更新 cmsimde 子模組,查驗網路支援的協定。 \n W7 \n git pull倉儲中的cmsimde模組,新增acp按鈕, 雙網路協定 \n W8 \n 期中考 \n W9 \n 期中考 \n W10 \n 利用網際表單更改數值，生成新的零件檔案 \n W11 \n 運動會 \n W12 \n 上傳考試題目 \n W13 \n 使用Solvespace編譯繪圖與應用 \n W14 \n NX2027, Onshape, Solvespace 零組件繪圖考試，拍攝wink \n W15 \n 使用solvespace組立two link robot再利用python控制CoppeliaSim場景 \n W16 \n 線上考試與填寫自評表', 'tags': '', 'url': 'Schedule.html'}, {'title': '心得', 'text': '2022 Fall電腦輔助設計與實習到底在教什麼? \n 課程包含電腦、輔助及設計三個要素，電腦(Computer)有軟體、硬體與介於軟、硬體之間的韌體(Firmware)；輔助(Aided)為從旁協助；設計(Design)指因應使用者需求，依據設計者的安排及流程，逐一從虛擬邁向實體，模擬走向實現。 \n 2022 Fall電腦輔助設計與實習的課程在訓練及培養"需要了解電腦輔助設計套件原理、架構與邏輯"的操作、開發者。 \n *韌體(Firmware)：電腦、軟體、網路環境的發展變得越來越複雜且精細，因此改由韌體程式處理硬體元件及環境辨識與啟動等相關設定，功能更強且能自動執行。 \n', 'tags': '', 'url': '心得.html'}, {'title': 'internet', 'text': '*乙太網路 \n 變更介面卡選項/乙太網路/IPv4關閉/IPv6開啟/DNS伺服器位址2001:b000:168::1 \n \n \n *Firefox \n 手動設定Proxy/學校電腦2001:288:6004:17::42/個人筆電140.130.17.4/連接埠3128 \n \n *Proxy伺服器 \n 2001:288:6004:17::42 /連接埠3128 \n \n \n', 'tags': '', 'url': 'internet.html'}, {'title': 'github', 'text': '取得site_Github_帳號倉儲管理權限 \n 登入Github帳號/網址輸入https://wcms.repl.co /進入2022 Fall \n \n', 'tags': '', 'url': 'github.html'}, {'title': 'wink3', 'text': '程式碼 \n <script>// <![CDATA[\nvar winkVideoData_40923151 = {\n  dataVersion: 1,\n  frameRate: 10,\n  buttonFrameLength: 5,\n  buttonFrameOffset: 2,\n  frameStops: {\n  },\n};\n// ]]></script>\n</p>\n<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->\n<div class="winkVideoContainerClass"><video width="1008" height="630" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData_40923151" muted="true">\n<source src="./../downloads/w10_cube.mp4" type="video/mp4" /></video></div> \n \n', 'tags': '', 'url': 'wink3.html'}, {'title': 'Replit', 'text': '在 Replit 上執行 cmsimde 動態網站步驟： \n \n 建立\xa0 Replit\xa0 帳號，登入 Email 驗證\xa0 Replit\xa0 寄出的註冊確認郵件 \n 以 \xa0cmsite\xa0 倉儲內容， import repository\xa0 建立 repl \n 在 shell 介面下執行 git submodule update --init --recursive，為了取下 \xa0cmsite \xa0 倉儲中 cmsimde 子模組檔案 \n 在 shell 介面下執行 pip install flask flask_cors bs4 lxml pelican markdown gevent，為了安裝 cmsimde 所需要的模組 \n 將 main.py 設定為啟動程式 \n 按下 Run，啟動 main.py \n 登入 \xa0cmsite\xa0 動態網站，修改管理者密碼、標題與內容後，以 generate_pages 將動態網頁內容轉為靜態網頁 \n 利用   Replit \xa0 中的 Version Control 功能，將改版資料推向遠端倉儲 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'FileZilla', 'text': '使用filezilla連線stud.cycu.org \n step1. 解壓縮FileZillaPortable_3.61.0.paf.exe，打開FileZillaPortable.exe。 \n \n step2. 點擊檔案中的站台管理員。 \n \n step3. 新增站台協定設定為SFTP-ssh文件傳輸協議，主機為stud.cycu.org，登入型式選擇詢問密碼，使用者為cad學號。 \n \n step4. 輸入4位密碼，與小黑窗連線伺服器的密碼相同。 \n \n step5. 點選確認，完成連線。 \n', 'tags': '', 'url': 'FileZilla.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w6', 'text': '1.零件一繪製-wink影片 \n NX-model1零件檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 2.零件二繪製-wink影片 \n NX-model2零件檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 3.零件三繪製-wink影片 \n NX-model3零件檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 4.零件三+細節繪製-wink影片 \n NX-model3+detail零件檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 5.零件四繪製-wink影片 \n NX-model4零件檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 6.零件一和零件二組合繪製-wink影片 \n NX-model1+model2組合檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 7.鑽床底座繪製及組合繪製-wink影片 \n 鑽床壓縮檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 8.axis繪製-wink影片 \n axis1-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 9.bearing1繪製-wink影片 \n bearing1-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 10.bearing2繪製-wink影片 \n bearing2-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 11.bolt2繪製-wink影片 \n bolt2-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 12.bolt3、4繪製-wink影片 \n bolt3-NX檔 \n bolt4-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 13.chuck繪製-wink影片 \n chuck-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 14.c buckle繪製-wink影片 \n c buckle-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 15.grip繪製-wink影片 \n grip-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 16.handle繪製-wink影片 \n handle-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 17.lid繪製-wink影片 \n lid-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 18.motor繪製-wink影片 \n motor-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 19.nut繪製-wink影片 \n nut-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n 20.positioning繪製-wink影片 \n positioning-NX檔 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w8', 'text': '下載NX2027 lite可攜版本、Solvespace 3.1版、drill press零組件檔案 \n 在Onshape建立教育版帳號 \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': 'HW2.已知 block.prt 中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. \n 檔案下載', 'tags': '', 'url': 'w10.html'}, {'title': 'w12', 'text': '各組依照相同格式, module name 選用 cad2022, 而 subject 則依照各組組序與命題週次命名, 例如: 2ag1-w6 表示由 2a 第一組針對 w6 的上課內容命題, 每一組題目至少 5 題, 至多 10 題, 每一題必須至少有 5 個正確敘述, 5 個錯誤敘述. \n 考試題目 2ag1.leo ， 2ag1.xml \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': 'Solvespace 編譯繪圖與應用 \n \n \n Solvespace 參數繪圖套件編譯過程, 請參考  1 ,  2 ,  3  教學影片說明. \n \n \n 單軸旋轉零組件繪製與應用, 請參考 教學影片 說明. \n \n 將上述編譯與應用流程實習內容, 放到個人 HW (h1) 中的 w13 (h2) 頁面. \n 零組件繪圖之後再利用 NX2027 與 Onshape 進行繪製與轉檔 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': 'NX2027 Onshape Solvespace 零組件繪圖考試 \n', 'tags': '', 'url': 'w14.html'}, {'title': 'Solvespace', 'text': '\n Solvespace 零組件繪圖考試 \n \n 根據  w13 one link robot 零組件繪圖與模擬教學影片 , 以 Solvespace 3.1 完成與影片相同連桿與旋轉軸尺寸之 two link robot 零組件繪製後, 壓縮為 .7z 檔案 upload 到個人的  https://stud.cycu.org :8xxxx 網站後, 將繪圖過程以 Wink 製作 mp4 影片後, 加上各階段繪圖說明 tag 後, 嵌入個人的 stud 動態網頁與個人課程 Github Pages 靜態網頁 (HW (H1) 下的 w14 (H2) 下的 Solvespace (H3) 頁面後, 可以得到 Solvespace 零組件繪圖考試分數. \n 檔案下載 \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'NX', 'text': '\n NX2027 零組件繪圖考試 \n \n \n 依據 教學影片 中的零組件尺寸與組立條件, 使用 NX2027 繪製 one link robot 零組件後, , 壓縮為 .7z 檔案 upload 到個人的  https://stud.cycu.org :8xxxx 網站後, 將繪圖過程以 Wink 製作 mp4 影片後, 加上各階段繪圖說明 tag 後, 嵌入個人的 stud 動態網頁與個人課程 Github Pages 靜態網頁 (HW (H1) 下的 w14 (H2) 下的 NX (H3) 頁面後, 可以得到 NX 零組件繪圖考試分數. \n NX檔案 \n \n 1.\xa0 零件繪製 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n 2.\xa0 零件組合 \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'Onshape', 'text': '依據 教學影片 中的零組件尺寸與組立條件, 以 Onshape 完成零組件繪圖後, 將各零件 URL 放入 HW (H1) 下的 w14 (H2) 下的 Onshape (H3) 頁面中, 並將組立件以 STL 格式匯出後轉入 Coppeliasim, 在各旋轉軸接處加上 Revolute joint 後, 令各軸以每秒 10 度的速度運轉. 完成後, 請利用 CoppeliaSim 中的模擬影片製作工具轉為 mp4 後將模擬影片上傳至個人 Youtube 帳號下, 並將影片嵌入 HW (H1) 下之 w14 (H2) 下的 Onshape (H3)頁面後, 可以得到 Onshape 零組件繪圖考試分數. \n \n base_url： https://cad.onshape.com/documents/227a34e61915634d0d56dd84/w/13a1b5523e13955c486ab746/e/502791ff811f49c560ba62fe \xa0 \n shaft_url： \n https://cad.onshape.com/documents/6e483189be634526c32cfc7c/w/9e5953ee34e7d8b482d53b52/e/d0d53ce60f1fb106c9da7cf3 \xa0 \n link_url： \n https://cad.onshape.com/documents/56d0555e76c3f49610ebc485/w/895fcf3882453a32081c30b2/e/b6a68a4509bd092061ccbe49 \xa0 \n \xa0 \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'w15', 'text': '\n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '期末作業 \n \n 根據  https://www.youtube.com/shorts/08TMJ_lJdZU  以及  https://www.youtube.com/watch?v=Jn8nxSZdF_c  中的機構設計, 以 Coppeliasim 4.3.0 rev 12 完成一個彈珠台遊戲系統, 使用者可透過鍵盤操作送球與挑球動作進行遊戲, 期間並可透過感測器依據碰撞與彈射位置計算得分. \n 參考資料: \n cad2022_final_hw_ref.7z \n \n 1.彈珠檯繪製  零件檔 \n \xa0Onshape\xa0 https://cad.onshape.com/documents/28f53d9bb5eb73dcaff9e014/w/2b5319c4753b2c946588d942/e/b8f699999c85b8162e06fd63 \xa0 \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'w16.html'}]};